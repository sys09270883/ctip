plugins {
    id "java"
    id "org.sonarqube" version "3.2.0"
    id "pmd"
    id "jacoco"
    id "com.github.spotbugs" version "4.7.1"
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(group: "junit", name: "junit", version: "4.13.2")
}

sonarqube {
    properties {
        property "sonar.projectKey", "sys09270883_ctip"
        property "sonar.organization", "sys09270883"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/core/Main.*')
        }))
    }

    dependsOn test

    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/core/Main.*')
        }))
    }

    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport

    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
        excludes += ['**/core/Main.*']
    }
}

jar {
    manifest {
        attributes 'Title': 'app-result', 'Version': '0.1.0', 'Main-Class': 'core.Main'
    }
    archiveName 'app.jar'
    dependsOn configurations.runtime
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

pmd {
    ignoreFailures = true
}

spotbugsMain {
    ignoreFailures = true
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugsTest {
    ignoreFailures = true
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
